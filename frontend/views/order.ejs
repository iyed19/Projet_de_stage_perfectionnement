<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link rel="stylesheet" href="/choice.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
</head>
<body>
    <nav class="navbar navbar-expand-lg sticky-top">
        <div class="container">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#main"
                aria-controls="main" aria-expanded="false" aria-label="Toggle navigation">
                <i class="fa-solid fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="main">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link p-2 p-lg-3" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link p-2 p-lg-3 active" href="/choice">Services</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link p-2 p-lg-3" href="#">About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link p-2 p-lg-3" href="#">Contact</a>
                    </li>
                </ul>
                <div class="search ps-3 pe-3 d-none d-lg-block">
                    <i class="fa-solid fa-magnifying-glass"></i>
                </div>
                <a class="btn btn-primary rounded-pill main-btn" href="#">Log Out</a>
            </div>
        </div>
    </nav>
    <div class="container" style="margin-top:50px;">
        <h2 style="text-align: center; color: var(--gold-color);">Order a Product</h2>
        <form id="orderForm" action="/order" method="post">
            <div class="form-group">
                <label for="name">Category :</label>
                <select id="categoryDropdown" class="form-select form-select-md mb-3 mt-1" aria-label=".form-select-lg example" name="category">
                    <option selected>Select a Category</option>
                    <% const uniqueCategories=new Set(); 
                    for (let product of data.prdData) { 
                        uniqueCategories.add(product.category);
                    } for (let category of uniqueCategories) { %>
                        <option value="<%= category %>">
                            <%= category %>
                        </option>
                        <% } %>
                </select>
            </div>
            <div class="form-group">
                <label for="name">Brand :</label>
                <select id="brandDropdown" class="form-select form-select-md mb-3 mt-1" aria-label=".form-select-lg example" name="brand">
                    <option selected>Select a Brand</option>
                    <% const uniqueBrands=new Set(); 
                    for (let product of data.prdData) { 
                        uniqueBrands.add(product.brand); 
                    } for (let brand of uniqueBrands) { %>
                        <option value="<%= brand %>">
                            <%= brand %>
                        </option>
                        <% } %>
                </select>
                <!-- <select id="brandDropdown" class="form-select form-select-md mb-3 mt-1" aria-label=".form-select-lg example"
                    name="brand" onchange="updateBrandDropdown()">
                    <option selected>Select a Brand</option>
                </select> -->
            </div>
            <div class="form-group">
                <label for="name">Model :</label>
                <select class="form-select form-select-md mb-3 mt-1" aria-label=".form-select-lg example" name="model">
                    <option selected>Select a Model</option>
                    <% for(let product of data.prdData) { %>
                        <option value="<%= product.model %>">
                            <%= product.model %>
                        </option>
                        <% } %>
                </select>
            </div>
            <div class="form-group">
                <label for="name">Agent :</label>
                <select class="form-select form-select-md mb-3 mt-1" aria-label=".form-select-lg example" name="agent">
                    <option selected>Select The Agent</option>
                    <% for(let agent of data.agentData) { %>
                        <option value="<%= agent.serialNumber %>">
                            <%= agent.serialNumber + ' -- ' + agent.name + ' ' + agent.lastName %>
                        </option>
                        <% } %>
                </select>
            </div>
            <div class="form-group">
                <label for="name">Quantity</label>
                <input class="form-control mb-3" type="number" name="quantity" placeholder="Enter product's quantity" required>
            </div>
            <button type="submit" class="btn btn-success me-1 mb-3">Order</button>
            <button id="printButton" class="btn btn-info mb-3">Print</button>
        </form>
        <div id="resultMessageContainer"></div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const printButton = document.getElementById("printButton");
            printButton.addEventListener("click", function () {
                window.print();
            });
        });

        document.getElementById('orderForm').addEventListener('submit', function (event) {
                function displayMessage(message) {
                    const resultMessageContainer = document.getElementById("resultMessageContainer");
                    const newDiv = document.createElement("div");
                    newDiv.classList.add("alert", "alert-success");
                    newDiv.textContent = message;
                    resultMessageContainer.appendChild(newDiv);
                }
                displayMessage("Order done successfully!");
            });
        /*const selectedCategory = document.getElementById('categoryDropdown').value;

        const brandsForCategory = data.prdData
            .filter(product => product.category === selectedCategory)
            .map(product => product.brand);

        const uniqueBrandsForCategory = new Set(brandsForCategory);

        // Assuming you have a function to update the dropdown
        function updateBrandDropdown() {
            const brandDropdown = document.getElementById('brandDropdown');
            brandDropdown.innerHTML = '<option selected>Select a Brand</option>';

            for (let brand of uniqueBrandsForCategory) {
                const option = document.createElement('option');
                option.value = brand;
                option.textContent = brand;
                brandDropdown.appendChild(option);
            }
        }

        // Call the function to initially update the dropdown
        updateBrandDropdown();*/
    </script>
</body>
</html>